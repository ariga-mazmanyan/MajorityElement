# -*- coding: utf-8 -*-
"""Majority_Element.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15gz170WSRzcUthFi_4xKzYGX2LHA2cdB
"""

maj_element_r = None
maj_element_l = None

def majority_element(arr):
  global maj_element_r, maj_element_l

  if len(arr) > 1:

    left = arr[:len(arr)//2]
    right = arr[len(arr)//2:]
    majority_element(left)
    majority_element(right)

  for i in range(len(arr)):
    if arr.count(arr[i]) > len(arr) // 2:
      maj_element_l = arr[i]
      break

  for i in range(len(arr)):
        if arr.count(arr[i]) > len(arr) // 2:
          maj_element_r = arr[i]


  if maj_element_r != maj_element_l:
    if arr.count(maj_element_r) > len(arr)//2:
      return maj_element_r

    elif arr.count(maj_element_l) > len(arr)//2:
      return maj_element_l

    else:
      return None
  else:
      return maj_element_l

a = [1, 1, 2, 3, 4, 4, 4, 4, 4, 3, 1, 1,1,1,1,1,1,1]
majority_element(a)